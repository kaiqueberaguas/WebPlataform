@model ProductsPageViewModel

<h1>Gerenciador de produtos</h1>

<table class="table">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Codigo</th>
            <th scope="col">Nome</th>
            <th scope="col">Descrição</th>
            <th scope="col">Quantidade</th>
            <th scope="col">Preço</th>
            <th scope="col"></th>

        </tr>
    </thead>
    <tbody>
        <tr>
            <td>12345432</td>
            <td>Mock</td>
            <td>Produto mocado de teste</td>
            <td>3</td>
            <td>R$30,00</td>
            <td>
                <button type="button" class="btn btn-secondary" asp-action="Put" asp-route-id="codigo">Editar</button>
                <button type="button" class="btn btn-secondary" asp-action="Disable" asp-route-id="codigo">@updatemessage(null)</button>
                <button type="button" class="btn btn-danger" asp-action="Delete" asp-route-id="codigo">Excluir</button>
            </td>
        </tr>
        @foreach (var product in Model.Products.Itens)
        {
            <tr>
                <td>@product.Id</td>
                <td>@product.Name</td>
                <td>@product.Description</td>
                <td>@product.Quantity</td>
                <td>R$@product.Price</td>
                <td>
                    <button type="button" class="btn btn-secondary" asp-action="Put" asp-route-id="codigo">Editar</button>
                    <button type="button" class="btn btn-secondary" asp-action="Disable" asp-route-id="codigo">@updatemessage(product)</button>
                    <button type="button" class="btn btn-danger" asp-action="Delete" asp-route-id="codigo">Excluir</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@*Paginação*@
<nav aria-label="Page navigation example">
    <ul class="pagination">
        @if (Model.Products.Page >= 1)
        {
            <li class="page-item"><a class="page-link " href="Product/Index">Previous</a></li>
        }
        else
        {
            <li class="page-item disabled"><a class="page-link " href="Product/Index">Previous</a></li>
        }

        @if (Model.Products.Page >= 2)
        {
            <li class="page-item"><a class="page-link" href="">@(Model.Products.Page-1)</a></li>
        }
        @if (Model.Products.Page >= 1)
        {
            <li class="page-item"><a class="page-link" href="#">@(Model.Products.Page)</a></li>
        }

        <li class="page-item active"><a class="page-link" href="#">@(Model.Products.Page + 1)</a></li>

        @if (Model.Products.Page <= Model.Products.TotalPages - 1)
        {
            <li class="page-item"><a class="page-link" href="#">@(Model.Products.Page + 2)</a></li>
        }

        @if (Model.Products.Page <= Model.Products.TotalPages - 1)
        {
            <li class="page-item"><a class="page-link" href="#">Next</a></li>
        }
        else
        {
            <li class="page-item disabled"><a class="page-link" href="#">Next</a></li>
        }
    </ul>
</nav>

@functions{

    //public List<Product> Products = (Model.Products.Itens != null) ? Model.Products.Itens : new List<Product>();



    private string updatemessage(Product product)
    {
        return (product != null && product.IsActive) ? "Desativar" : "Ativar";
    }
}
